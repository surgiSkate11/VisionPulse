# Generated by Django 5.2.1 on 2025-09-19 03:31

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('security', '0011_remove_user_dark_mode_remove_user_has_adhd'),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('key', models.CharField(max_length=255, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Clave API',
                'verbose_name_plural': 'Claves API',
            },
        ),
        migrations.RemoveField(
            model_name='user',
            name='achievement_notifications',
        ),
        migrations.RemoveField(
            model_name='user',
            name='ai_assistance_level',
        ),
        migrations.RemoveField(
            model_name='user',
            name='auto_generate_summaries',
        ),
        migrations.RemoveField(
            model_name='user',
            name='auto_start_breaks',
        ),
        migrations.RemoveField(
            model_name='user',
            name='compact_view',
        ),
        migrations.RemoveField(
            model_name='user',
            name='current_level',
        ),
        migrations.RemoveField(
            model_name='user',
            name='default_break_duration',
        ),
        migrations.RemoveField(
            model_name='user',
            name='default_pomodoro_duration',
        ),
        migrations.RemoveField(
            model_name='user',
            name='institution',
        ),
        migrations.RemoveField(
            model_name='user',
            name='learning_style',
        ),
        migrations.RemoveField(
            model_name='user',
            name='major',
        ),
        migrations.RemoveField(
            model_name='user',
            name='notes_created',
        ),
        migrations.RemoveField(
            model_name='user',
            name='preferred_study_time',
        ),
        migrations.RemoveField(
            model_name='user',
            name='show_motivational_quotes',
        ),
        migrations.RemoveField(
            model_name='user',
            name='study_level',
        ),
        migrations.RemoveField(
            model_name='user',
            name='study_reminders',
        ),
        migrations.RemoveField(
            model_name='user',
            name='task_deadlines',
        ),
        migrations.RemoveField(
            model_name='user',
            name='tasks_completed',
        ),
        migrations.RemoveField(
            model_name='user',
            name='total_study_time',
        ),
        migrations.RemoveField(
            model_name='user',
            name='total_xp',
        ),
        migrations.AddField(
            model_name='user',
            name='auto_pause_on_fatigue',
            field=models.BooleanField(default=True, help_text='Pausar automáticamente cuando se detecte fatiga extrema'),
        ),
        migrations.AddField(
            model_name='user',
            name='auto_suggest_exercises',
            field=models.BooleanField(default=True, help_text='Sugerir ejercicios automáticamente basado en fatiga detectada'),
        ),
        migrations.AddField(
            model_name='user',
            name='break_reminder_interval',
            field=models.PositiveIntegerField(default=20, help_text='Intervalo para recordatorios de descanso en minutos', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(120)]),
        ),
        migrations.AddField(
            model_name='user',
            name='break_reminders',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='breaks_taken',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Descansos tomados por alertas'),
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.CharField(blank=True, help_text='Nombre de tu empresa u organización', max_length=200),
        ),
        migrations.AddField(
            model_name='user',
            name='daily_reports',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='exercise_difficulty',
            field=models.CharField(choices=[('easy', 'Fácil'), ('moderate', 'Moderado'), ('advanced', 'Avanzado')], default='moderate', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='exercises_completed',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Ejercicios oculares completados'),
        ),
        migrations.AddField(
            model_name='user',
            name='fatigue_episodes',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Episodios de fatiga detectados'),
        ),
        migrations.AddField(
            model_name='user',
            name='job_title',
            field=models.CharField(blank=True, help_text='Tu puesto o rol profesional', max_length=200),
        ),
        migrations.AddField(
            model_name='user',
            name='monitoring_frequency',
            field=models.PositiveIntegerField(default=30, help_text='Frecuencia de análisis visual en segundos', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(300)]),
        ),
        migrations.AddField(
            model_name='user',
            name='preferred_work_time',
            field=models.CharField(blank=True, choices=[('morning', 'Mañana'), ('afternoon', 'Tarde'), ('evening', 'Noche'), ('late_night', 'Madrugada')], default='morning', help_text='Horario donde más trabajas frente a la pantalla', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='screen_size',
            field=models.CharField(blank=True, choices=[('small', 'Pequeña (< 15")'), ('medium', 'Mediana (15" - 24")'), ('large', 'Grande (24" - 32")'), ('ultrawide', 'Ultra ancha (> 32")'), ('multiple', 'Múltiples pantallas')], default='medium', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='total_monitoring_time',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Tiempo total monitoreado en minutos'),
        ),
        migrations.AddField(
            model_name='user',
            name='total_sessions',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Número total de sesiones de monitoreo'),
        ),
        migrations.AddField(
            model_name='user',
            name='visual_fatigue_alerts',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='work_environment',
            field=models.CharField(blank=True, choices=[('office', 'Oficina'), ('home', 'Casa'), ('hybrid', 'Híbrido'), ('coworking', 'Coworking'), ('other', 'Otro')], default='office', max_length=20),
        ),
        migrations.AlterField(
            model_name='user',
            name='current_streak',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Días consecutivos usando la aplicación'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_type',
            field=models.CharField(blank=True, choices=[('office_worker', 'Trabajador de Oficina'), ('programmer', 'Programador'), ('designer', 'Diseñador'), ('student', 'Estudiante'), ('gamer', 'Gamer'), ('freelancer', 'Freelancer'), ('other', 'Otro')], default='office_worker', max_length=20),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre completo')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='Zona horaria')),
                ('locale', models.CharField(default='es', max_length=10, verbose_name='Idioma/Localización')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de usuario',
                'verbose_name_plural': 'Perfiles de usuario',
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ear_threshold', models.FloatField(default=0.2, help_text='Valor recomendado entre 0.08 y 0.25, por defecto 0.20', validators=[django.core.validators.MinValueValidator(0.05), django.core.validators.MaxValueValidator(0.4)], verbose_name='Umbral EAR')),
                ('blink_window_frames', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Ventana confirmación (frames)')),
                ('sampling_interval_seconds', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)], verbose_name='Intervalo muestreo (s)')),
                ('rest_interval_minutes', models.PositiveIntegerField(default=20, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(240)], verbose_name='Intervalo de descanso (min)')),
                ('camera_enabled', models.BooleanField(default=True)),
                ('face_detection_sensitivity', models.FloatField(default=0.7, help_text='Sensibilidad de detección facial (0.1-1.0)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1.0)])),
                ('fatigue_threshold', models.FloatField(default=0.7, help_text='Umbral para alertas de fatiga (0.1-1.0)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1.0)])),
                ('blink_rate_threshold', models.PositiveIntegerField(default=15, help_text='Parpadeos mínimos por minuto', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(30)])),
                ('notification_mode', models.CharField(choices=[('visual', 'Visual'), ('sound', 'Sonora'), ('both', 'Visual y Sonora'), ('none', 'Ninguna')], default='both', max_length=10)),
                ('notify_inactive_tab', models.BooleanField(default=True)),
                ('dark_mode', models.BooleanField(default=False)),
                ('sound_alerts', models.BooleanField(default=True)),
                ('alert_volume', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('data_collection_consent', models.BooleanField(default=False)),
                ('anonymous_analytics', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vision_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ajustes de usuario',
                'verbose_name_plural': 'Ajustes de usuarios',
            },
        ),
        migrations.CreateModel(
            name='CameraDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('device_id', models.CharField(max_length=300)),
                ('is_default', models.BooleanField(default=False)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='camera_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dispositivo de Cámara',
                'verbose_name_plural': 'Dispositivos de Cámara',
                'ordering': ['-is_default', 'name'],
                'indexes': [models.Index(fields=['user', 'is_default'], name='security_ca_user_id_329945_idx')],
                'unique_together': {('user', 'device_id')},
            },
        ),
        migrations.CreateModel(
            name='ConsentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=512)),
                ('policy_version', models.CharField(default='v1', max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Consentimiento',
                'verbose_name_plural': 'Registros de Consentimiento',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='security_co_user_id_dd2c01_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('webpush', 'WebPush'), ('sound', 'Sonido')], max_length=20)),
                ('enabled', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_prefs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preferencia de Notificación',
                'verbose_name_plural': 'Preferencias de Notificación',
                'unique_together': {('user', 'channel')},
            },
        ),
    ]
