# Generated by Django 5.2.1 on 2025-10-18 20:59

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Nombre')),
                ('icon', models.CharField(default='fas fa-bars', max_length=100, verbose_name='Icono (FontAwesome)')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Orden')),
            ],
            options={
                'verbose_name': 'Menú',
                'verbose_name_plural': 'Menús',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('image', models.ImageField(blank=True, max_length=1024, null=True, upload_to='security/users/')),
                ('bio', models.TextField(blank=True, help_text='Breve descripción sobre ti', max_length=500)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ciudad')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='País')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Teléfono')),
                ('profile_completed', models.BooleanField(default=False, help_text='¿Completó el onboarding?')),
                ('user_type', models.CharField(blank=True, choices=[('office_worker', 'Trabajador de Oficina'), ('programmer', 'Programador'), ('designer', 'Diseñador'), ('student', 'Estudiante'), ('gamer', 'Gamer'), ('freelancer', 'Freelancer'), ('other', 'Otro')], default='office_worker', max_length=20)),
                ('work_environment', models.CharField(blank=True, choices=[('office', 'Oficina'), ('home', 'Casa'), ('hybrid', 'Híbrido'), ('coworking', 'Coworking'), ('other', 'Otro')], default='office', max_length=20)),
                ('company', models.CharField(blank=True, help_text='Nombre de tu empresa u organización', max_length=200)),
                ('job_title', models.CharField(blank=True, help_text='Tu puesto o rol profesional', max_length=200)),
                ('screen_size', models.CharField(blank=True, choices=[('small', 'Pequeña (< 15")'), ('medium', 'Mediana (15" - 24")'), ('large', 'Grande (24" - 32")'), ('ultrawide', 'Ultra ancha (> 32")'), ('multiple', 'Múltiples pantallas')], default='medium', max_length=20)),
                ('preferred_work_time', models.CharField(blank=True, choices=[('morning', 'Mañana'), ('afternoon', 'Tarde'), ('evening', 'Noche'), ('late_night', 'Madrugada')], default='morning', help_text='Horario donde más trabajas frente a la pantalla', max_length=20)),
                ('ear_threshold', models.FloatField(default=0.2, validators=[django.core.validators.MinValueValidator(0.05), django.core.validators.MaxValueValidator(0.4)], verbose_name='Umbral EAR')),
                ('blink_window_frames', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Ventana confirmación (frames)')),
                ('blink_rate_threshold', models.PositiveIntegerField(default=15, help_text='Parpadeos mínimos por minuto para alerta', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(30)])),
                ('monitoring_frequency', models.PositiveIntegerField(default=30, help_text='Frecuencia de análisis visual en segundos', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(300)])),
                ('break_reminder_interval', models.PositiveIntegerField(default=20, help_text='Intervalo para recordatorios de descanso en minutos', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(120)])),
                ('dark_mode', models.BooleanField(default=False)),
                ('notification_mode', models.CharField(choices=[('visual', 'Visual'), ('sound', 'Sonora'), ('both', 'Ambos'), ('none', 'Ninguno')], default='both', max_length=10)),
                ('alert_volume', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('data_collection_consent', models.BooleanField(default=False)),
                ('anonymous_analytics', models.BooleanField(default=True)),
                ('camera_enabled', models.BooleanField(default=True)),
                ('face_detection_sensitivity', models.FloatField(default=0.7, help_text='Sensibilidad de detección facial (0.1-1.0)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1.0)])),
                ('fatigue_threshold', models.FloatField(default=0.7, help_text='Umbral para alertas de fatiga (0.1-1.0)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1.0)])),
                ('sampling_interval_seconds', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('notify_inactive_tab', models.BooleanField(default=True)),
                ('locale', models.CharField(blank=True, default='es', max_length=10, verbose_name='Idioma/Localización')),
                ('timezone', models.CharField(blank=True, default='America/Guayaquil', max_length=50, verbose_name='Zona horaria')),
                ('total_monitoring_time', models.PositiveIntegerField(default=0, help_text='Tiempo total monitoreado en minutos')),
                ('total_sessions', models.PositiveIntegerField(default=0, help_text='Número total de sesiones de monitoreo')),
                ('current_streak', models.PositiveIntegerField(default=0, help_text='Días consecutivos usando la aplicación')),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('last_streak_update', models.DateField(blank=True, null=True)),
                ('exercises_completed', models.PositiveIntegerField(default=0, help_text='Ejercicios oculares completados')),
                ('breaks_taken', models.PositiveIntegerField(default=0, help_text='Descansos tomados por alertas')),
                ('fatigue_episodes', models.PositiveIntegerField(default=0, help_text='Episodios de fatiga detectados')),
                ('email_notifications', models.BooleanField(default=True)),
                ('user_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_groups', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tabla', models.CharField(max_length=100, verbose_name='Tabla')),
                ('registroid', models.IntegerField(verbose_name='Registro Id')),
                ('accion', models.CharField(choices=[('CREATE', 'Crear'), ('UPDATE', 'Actualizar'), ('DELETE', 'Eliminar'), ('VIEW', 'Ver')], max_length=15, verbose_name='Accion')),
                ('fecha', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha')),
                ('hora', models.TimeField(default=django.utils.timezone.now, verbose_name='Hora')),
                ('estacion', models.CharField(max_length=100, verbose_name='Estacion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Auditoria de Usuario',
                'verbose_name_plural': 'Auditorias de Usuarios',
                'ordering': ('-fecha', '-hora'),
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(help_text="El 'name' de la URL en urls.py. Ej: 'security:home'", max_length=100, unique=True, verbose_name='URL Name')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('icon', models.CharField(default='fas fa-question-circle', max_length=100, verbose_name='Icono (FontAwesome)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Es activo')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Orden')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='modules', to='security.menu', verbose_name='Menú')),
            ],
            options={
                'verbose_name': 'Módulo',
                'verbose_name_plural': 'Módulos',
                'ordering': ['menu__order', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CameraDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('device_id', models.CharField(max_length=300)),
                ('is_default', models.BooleanField(default=False)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='camera_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dispositivo de Cámara',
                'verbose_name_plural': 'Dispositivos de Cámara',
                'ordering': ['-is_default', 'name'],
                'indexes': [models.Index(fields=['user', 'is_default'], name='security_ca_user_id_329945_idx')],
                'unique_together': {('user', 'device_id')},
            },
        ),
        migrations.CreateModel(
            name='ConsentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=512)),
                ('policy_version', models.CharField(default='v1', max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Consentimiento',
                'verbose_name_plural': 'Registros de Consentimiento',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='security_co_user_id_dd2c01_idx')],
            },
        ),
        migrations.CreateModel(
            name='GroupModulePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_permissions', to='auth.group', verbose_name='Grupo')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_permissions', to='security.module', verbose_name='Módulo')),
            ],
            options={
                'verbose_name': 'Permiso de Módulo por Grupo',
                'verbose_name_plural': 'Permisos de Módulos por Grupo',
                'ordering': ['group', 'module'],
                'constraints': [models.UniqueConstraint(fields=('group', 'module'), name='unique_group_module_permission')],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('webpush', 'WebPush'), ('sound', 'Sonido')], max_length=20)),
                ('enabled', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_prefs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preferencia de Notificación',
                'verbose_name_plural': 'Preferencias de Notificación',
                'unique_together': {('user', 'channel')},
            },
        ),
    ]
