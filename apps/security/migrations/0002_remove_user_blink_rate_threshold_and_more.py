# Generated by Django 5.2.1 on 2025-10-25 21:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('security', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='user',
            name='blink_rate_threshold',
        ),
        migrations.AddField(
            model_name='user',
            name='distraction_angle_threshold',
            field=models.PositiveSmallIntegerField(default=25, help_text="Ángulo (grados) de desviación de la cabeza para considerarse 'distraído'.", validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(45)], verbose_name='Ángulo de Distracción (°)'),
        ),
        migrations.AddField(
            model_name='user',
            name='high_blink_rate_threshold',
            field=models.PositiveSmallIntegerField(default=35, help_text='Alertar si parpadea MÁS de X veces por minuto. (Normal: 15-20, Estrés: >30)', validators=[django.core.validators.MinValueValidator(25), django.core.validators.MaxValueValidator(60)], verbose_name='Umbral Parpadeo Alto (por min)'),
        ),
        migrations.AddField(
            model_name='user',
            name='low_blink_rate_threshold',
            field=models.PositiveSmallIntegerField(default=10, help_text='Alertar si parpadea MENOS de X veces por minuto. (Normal: 15-20, Concentración: 3-8)', validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(20)], verbose_name='Umbral Parpadeo Bajo (por min)'),
        ),
        migrations.AddField(
            model_name='user',
            name='low_light_threshold',
            field=models.PositiveSmallIntegerField(default=70, help_text="Nivel de brillo (0-255) por debajo del cual se considera 'Iluminación Baja'.", validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(120)], verbose_name='Umbral Luz Baja (Luminancia)'),
        ),
        migrations.AddField(
            model_name='user',
            name='microsleep_duration_seconds',
            field=models.FloatField(default=1.5, help_text='Segundos con ojos cerrados para disparar alerta de microsueño. (Peligro: >1 seg)', validators=[django.core.validators.MinValueValidator(0.8), django.core.validators.MaxValueValidator(5.0)], verbose_name='Duración Microsueño (seg)'),
        ),
        migrations.AddField(
            model_name='user',
            name='postural_rigidity_duration_seconds',
            field=models.PositiveSmallIntegerField(default=180, help_text='Tiempo (segundos) sin mover la cabeza para alertar sobre rigidez.', validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(600)], verbose_name='Duración Rigidez Postural (seg)'),
        ),
        migrations.AddField(
            model_name='user',
            name='yawn_mar_threshold',
            field=models.FloatField(default=0.6, help_text='Sensibilidad de detección de bostezo (proporción de apertura de boca).', validators=[django.core.validators.MinValueValidator(0.4), django.core.validators.MaxValueValidator(1.0)], verbose_name='Umbral Bostezo (MAR)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='alert_volume',
            field=models.FloatField(default=0.5, help_text='Volumen de las alertas sonoras (0.0-1.0).', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Volumen de Alertas'),
        ),
        migrations.AlterField(
            model_name='user',
            name='anonymous_analytics',
            field=models.BooleanField(default=True, help_text='Permitir analíticas anónimas para estadísticas generales.', verbose_name='Analíticas Anónimas'),
        ),
        migrations.AlterField(
            model_name='user',
            name='blink_window_frames',
            field=models.PositiveSmallIntegerField(default=3, help_text='Frames consecutivos con ojos cerrados para confirmar un parpadeo.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Ventana confirmación (frames)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='break_reminder_interval',
            field=models.PositiveIntegerField(default=20, help_text='Intervalo para recordatorios de descanso en minutos.', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(120)], verbose_name='Recordatorio Descanso (min)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='camera_enabled',
            field=models.BooleanField(default=True, help_text='Habilitar o deshabilitar el uso de la cámara.', verbose_name='Cámara Habilitada'),
        ),
        migrations.AlterField(
            model_name='user',
            name='dark_mode',
            field=models.BooleanField(default=False, verbose_name='Modo Oscuro'),
        ),
        migrations.AlterField(
            model_name='user',
            name='data_collection_consent',
            field=models.BooleanField(default=False, help_text='Autorizar recolección de datos para mejorar el servicio.', verbose_name='Consentimiento Recolección Datos'),
        ),
        migrations.AlterField(
            model_name='user',
            name='ear_threshold',
            field=models.FloatField(default=0.2, help_text='Sensibilidad de apertura ocular (EAR). Más bajo = más sensible.', validators=[django.core.validators.MinValueValidator(0.05), django.core.validators.MaxValueValidator(0.4)], verbose_name='Umbral EAR'),
        ),
        migrations.AlterField(
            model_name='user',
            name='face_detection_sensitivity',
            field=models.FloatField(default=0.7, help_text='Sensibilidad de detección facial (0.1-1.0).', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1.0)], verbose_name='Sensibilidad Detección Facial'),
        ),
        migrations.AlterField(
            model_name='user',
            name='fatigue_threshold',
            field=models.FloatField(default=0.7, help_text='Porcentaje del EAR base para alerta de fatiga (ej: 0.7 = 70% de tu EAR normal).', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1.0)], verbose_name='Factor Fatiga (EAR %)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='locale',
            field=models.CharField(blank=True, default='es', help_text="Código de idioma (ej: 'es', 'en', 'fr').", max_length=10, verbose_name='Idioma/Localización'),
        ),
        migrations.AlterField(
            model_name='user',
            name='monitoring_frequency',
            field=models.PositiveIntegerField(default=30, help_text='Frecuencia de análisis visual profundo en segundos.', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(300)], verbose_name='Frecuencia de análisis (seg)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='notification_mode',
            field=models.CharField(choices=[('visual', 'Visual'), ('sound', 'Sonora'), ('both', 'Ambos'), ('none', 'Ninguno')], default='both', max_length=10, verbose_name='Modo de Notificación'),
        ),
        migrations.AlterField(
            model_name='user',
            name='notify_inactive_tab',
            field=models.BooleanField(default=True, help_text='Mostrar notificaciones cuando la pestaña no está activa.', verbose_name='Notificar en Tab Inactiva'),
        ),
        migrations.AlterField(
            model_name='user',
            name='sampling_interval_seconds',
            field=models.PositiveIntegerField(default=5, help_text='Intervalo de captura de frames para análisis.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)], verbose_name='Intervalo Muestreo (seg)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='timezone',
            field=models.CharField(blank=True, default='America/Guayaquil', help_text="Zona horaria del usuario (ej: 'America/Guayaquil').", max_length=50, verbose_name='Zona horaria'),
        ),
    ]
